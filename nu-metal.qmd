---
title: "numetalR"
format: html
editor: visual
---

# numetalR

It was recently announced that nu-metal pioneers, Korn, have partnered with a makeup company to turn their iconic 3rd record, *Follow The Leader*, into a color palette.

![](images/makeup_korn.png){fig-align="center"}

Inspired by this, I wanted to bring the world of nu-metal into R and the awesome visualization tool `ggplot`. Did anyone ask for this? No. Does anyone want this? Also no.

## `paletteer`

![](images/image-1483850725.png){fig-align="center"}

I stumbled upon the R package `paletter` that allows you to take any picture and extract the optimised palette. It does this by using an unsupervised learning technique (k-means clustering).

It is pretty simple to use. I will show you how.

# Korn - It's On!

First, you need to save the location of the image file:

```{r}
library(here) # relative path
library(paletter) # package to
library(ggplot2)
#extract color palette

image_path <- here::here("images", "Korn.jpeg")

```

![](images/Korn.jpeg)

Then you can read that file into a function from the package

```{r}
#|message=fasle
#|
# Get the color palette
colours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                           type_of_variable = "categorical")
```

Once you do this, it will output a list of hex codes corresponding to the most representative colors in the image.

Let's put the hex codes side by side with the album art:

![](images/korn_pal_ftl.png){fig-align="center"}

So here we have a color palette associated with the album *Follow The Leader.* Let's see how it looks on some data.

```{r}
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
  geom_point(size=2) +
  scale_color_manual(values=colours_vector[1:3])

```

# Other Nu-Metal Artists

I decided to do this with a few other popular artists from my childhood. Let's do a *Fallen* palette.

## Evanescence - Fallen

Wake me up! I can't wake up! Sorry. I am getting too pumped up for this.

![](images/fallen1.jpeg){fig-align="center"}

```{r}

image_path <- here::here("images", "fallen1.jpeg")

```

```{r}
#|message=fasle
#|
# Get the color palette
colours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = "categorical")

```

![](images/even_fallen.png){fig-align="center"}

```{r}

ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
  geom_point(size=2) +
  scale_color_manual(values=colours_vector[1:3])
```

## Limp Bizkit - Significant Other

![](images/LB.jpeg){fig-align="center"}

```{r}
image_path <- here::here("images", "LB.jpeg")
```

```{r}
#|message=fasle
#|
# Get the color palette
colours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = "categorical")
```

```{r}
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
  geom_point(size=2) +
  scale_color_manual(values=colours_vector[1:3])
```

## ![](images/LB-color.png)

## Linkin Park - Hybrid Theory

![](images/LP.jpeg){fig-align="center"}

```{r}
image_path <- here::here("images", "LP.jpeg")
```

```{r}
#|message=fasle
#|
# Get the color palette
colours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = "categorical")
```

![](images/LP_hybrid.png)

```{r}
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
  geom_point(size=2) +
  scale_color_manual(values=colours_vector[1:3])

```

# R Package

I bundled all the hex codes in a function called `nu-palettes`.

Use nu-paelettes to extract hex codes associated with band.

```{r}

source(here::here("R", "nu_palettes.R"))

korn_color= nu_palettes("korn")

korn_color

```

`print.palette` prints out the colors

```{r}
# print colors

print.palette(korn_color)

```
